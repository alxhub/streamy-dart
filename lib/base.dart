// Generated by the Streamy Mixologist.

library base;

import 'package:streamy/streamy.dart' as streamy;

abstract class MapBase extends Object implements streamy.DynamicAccess {
  var _map;
  
  Iterable<String> get keys => _map.keys;
  bool containsKey(String key) => _map.containsKey(key);
  operator[](String key) => _map[key];
  operator[]=(String key, value) {
    _map[key] = value;
  }
  remove(String key) => _map.remove(key);
}

Map getMap(MapBase entity) => entity._map;
void setMap(MapBase entity, map) {
  entity._map = map;
}

abstract class CopyClone extends MapBase implements streamy.Cloneable {

  dynamic clone();
  
  copyInto(other) {
    for (var key in keys) {
      other[key] = _cloneHelper(super[key]);
    }
    return other;
  }
  
  _cloneHelper(value) {
    if (value is streamy.Cloneable) {
      return value.clone();
    } else if (value is List) {
      return value.map(_cloneHelper).toList();
    } else {
      return value;
    }
  }
}

class Entity extends CopyClone {}
